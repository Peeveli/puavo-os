#!/bin/sh

set -eu

local_config_path=/state/etc/puavo/local/config.json

allowed_logins() { jq -r .allow_logins_for[] "$local_config_path"; }

deny()
{
    echo 'Access denied due to local policy.' >&2
    exit 1
}

is_admin_user()
{
    # Check if user belongs to "puavo-os"-group, which is for administrators.
    getent group puavo-os | cut -d ':' -f4 | tr , '\n' \
	| grep -x -q "${PAM_USER}"
}

# Allow "root" and "Debian-gdm" always.
if [ "${PAM_USER}" = "root" -o "${PAM_USER}" = "Debian-gdm" ]; then
    exit 0
fi

if [ "$(puavo-conf puavo.admin.personally_administered)" != 'true' ]; then
  # no special restrictions on hosts which are not personally administered
  exit 0
fi

#
# this host is personally administered so special rules apply
#

# If guest login is enabled, allow guest user in.
if [ "$(puavo-conf puavo.guestlogin.enabled)" = 'true' \
  -a "$PAM_USER" = 'guest' ]; then
    exit 0
fi

# config does not exist or is not readable, so do not restrict anyone
[ ! -r "$local_config_path" ] && exit 0

# Allow all explicitly listed users, not matter what.
allowed_logins | fgrep -qx "${PAM_USER}" && exit 0

if is_admin_user; then
    incoming_accepted=$(
      /usr/lib/puavo-ltsp-client/admin-remote-connections \
        --is-incoming-accepted)

    if [ "$incoming_accepted" = 'yes' ]; then
        exit 0
    fi

    deny
fi

# if configuration contains '*', allow all
allowed_logins | fgrep -qx '*' && exit 0

# Test for a special case: if allow_logins_for is missing, jq outputs
# null. Note the difference between .allow_logins_for and
# .allow_logins_for[]: the latter tries to iterate over an array which
# results in an empty string if the field does not exist. The former
# returns null. This kind of voodoo-testing is required because jq is
# notorious for not exiting on error! This script also serves as a
# perfect example why jq should not be used anywhere. It is completely
# broken by design.
case $(jq -r .allow_logins_for "${local_config_path}") in
    null)
	exit 0
	;;
    *)
	;;
esac

# allow primary user in irrespective of local configurations
primary_user="$(puavo-conf puavo.admin.primary_user)"
if [ "$primary_user" = "${PAM_USER}" ]; then
    exit 0
fi

# otherwise, tough luck!
deny
