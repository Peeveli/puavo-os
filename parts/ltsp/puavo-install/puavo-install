#!/bin/sh

set -eu

ask_install_target_hosttype() {
  puavo_install_target_hosttype=laptop
  while true; do
    echo 'Choose hosttype (possible choices are: bootserver laptop wirelessaccesspoint)' \
         >&2
    read -p "  Target hosttype? [$puavo_install_target_hosttype]: " answer
    [ -n "$answer" ] && puavo_install_target_hosttype=$answer

    case "$puavo_install_target_hosttype" in
      bootserver|laptop|wirelessaccesspoint) break          ;;
      *) echo "'$answer' is not a supported hosttype\n" >&2 ;;
    esac
  done

  echo "$puavo_install_target_hosttype"
}

ask_preseed() {
  preseeds=$(ls -1 /usr/share/puavo-ltsp-install/preseeds | sort)
  preseed_count=$(echo "${preseeds}" | wc -l)

  # Ask the preferred preseed if there are some available.
  [ -n "${preseeds}" ] && while true; do
    echo "Installer preseeds:"
    # Print the list of preseeds.
    echo "0\tNO PRESEEDING"
    echo "${preseeds}" | awk '{printf "%d\tPre-customized installation for %s\n", NR, $0}'

    # The default preseed is the first item, number 0.
    read -p "Select preseed number [0]: " preseed_nr
    [ -n "${preseed_nr}" ] || preseed_nr=0

    # Ensure the value is a valid integer.
    case "${preseed_nr}" in
      ''|*[!0-9]*)
        echo "E: invalid preseed number" >&2
        continue
        ;;
      *)
        ;;
    esac

    # Ensure the integer has a valid value.
    if [ 0 -gt "${preseed_nr}" \
           -o "${preseed_nr}" -gt "${preseed_count}" ]; then
      echo "E: invalid preseed number" >&2
      continue
    fi

    # Preseed 0 always means no preseeding at all.
    [ "${preseed_nr}" -eq 0 ] && break

    # Apply preseeds and continue installation.
    preseed=$(echo "${preseeds}" | sed -n "${preseed_nr}p")
    puavo_preseed_register_args=$(cat "/usr/share/puavo-ltsp-install/preseeds/${preseed}/puavo_preseed_register_args")
    puavo_preseed_setup_filesystems_args=$(cat "/usr/share/puavo-ltsp-install/preseeds/${preseed}/puavo_preseed_setup_filesystems_args")

    break
  done

  ## Ask primary_user_uid and puavoHostname here before puavo-register
  ## to avoid straying in the puavo-register question jungle; currently,
  ## puavo-register forces the user to walk through all the
  ## configuration options even if the user wants to modify just one
  ## specific option.
  while true; do
      read -p "Primary user: " primary_user

      echo "${primary_user}" | egrep -q '\s' && {
          echo "E: primary user name cannot contain whitespace" >&2
          continue
      }

      if [ -n "${primary_user}" ]; then
          puavo_preseed_register_args="${puavo_preseed_register_args} --primary_user_uid ${primary_user}"
      fi

      break
  done

  while true; do
      read -p "Hostname: " puavo_hostname

      echo "${puavo_hostname}" | egrep -q '\s' && {
          echo "E: hostname name cannot contain whitespace" >&2
          continue
      }

      if [ -n "${puavo_hostname}" ]; then
          puavo_preseed_register_args="${puavo_preseed_register_args} --puavoHostname ${puavo_hostname}"
      fi

      break
  done
}

do_preinstall() {
  puavo_install_hosttype=$1
  puavo_preseed_setup_filesystems_args=$2

  if is_preinstalled "$puavo_install_hosttype"; then
    echo 'Can not do a preinstall from a preinstalled host' >&2
    return 1
  fi

  echo
  echo 'Welcome to puavo device preinstallation!'
  echo

  puavo_install_target_hosttype=$(ask_install_target_hosttype)

  echo
  puavo-setup-filesystems --hosttype "$puavo_install_target_hosttype" \
                          $puavo_preseed_setup_filesystems_args

  # Grub needs to be installed before images, because grub
  # configuration is updated during image installation by
  # puavo-image-preinst.
  install_grub --hosttype preinstalled
  install_image "$puavo_install_hosttype" --hosttype preinstalled

  echo "$puavo_install_target_hosttype" > /images/puavo_preinstalled

  do_umounts
}

do_umounts() {
  umounts_status=0

  for mntpoint in /home /imageoverlays /images /state /tmp; do
    if mountpoint -q "$mntpoint"; then
      umount -l "$mntpoint" || umounts_status=1
    fi
  done

  return $umounts_status
}

get_accepted_hosttypes() {
  puavo_install_hosttype=$1

  if [ "$puavo_install_hosttype" = 'preinstalled' ]; then
    get_preinstalled_hosttype
    return 0
  fi

  echo 'bootserver,fatclient,laptop,wirelessaccesspoint'
}

get_install_hosttype() {
  mkdir -p /run/puavo
  if [ ! -e /run/puavo/install_hosttype ]; then
    cp /etc/puavo/hosttype /run/puavo/install_hosttype
  fi

  puavo_install_hosttype="$(cat /run/puavo/install_hosttype)"

  case "$puavo_install_hosttype" in
    diskinstaller|preinstalled|unregistered)
      echo "$puavo_install_hosttype"
      ;;
    *)
      echo "'${puavo_install_hosttype}' is not a supported hosttype for" \
	   "installation" >&2
      return 1
      ;;
  esac
}

get_preinstalled_hosttype() {
  preinstalled_hosttype=$(cat /images/puavo_preinstalled 2>/dev/null || true)
  case "$preinstalled_hosttype" in
    bootserver|laptop|wirelessaccesspoint)
      echo "$preinstalled_hosttype"
      ;;
    *)
      echo 'Host is preinstalled, but does not have a supported hosttype' >&2
      return 1
      ;;
  esac
}

install_grub() {
  echo -n 'Doing grub installation: '
  puavo-install-grub "$@"
  sync
}

install_image() {
  puavo_install_hosttype=$1; shift

  ltspimage_name=$(cat /etc/puavo-image/name 2>/dev/null || true)
  if [ -z "$ltspimage_name" ]; then
    echo 'Could not determine the current ltsp image' >&2
    return 1
  fi

  case "$puavo_install_hosttype" in
    diskinstaller)
      puavo-install-and-update-ltspimages "$@"                 \
        --install-from-file "/installimages/${ltspimage_name}" \
        "$ltspimage_name"
      ;;
    unregistered)
      puavo-install-and-update-ltspimages "$@" \
        --install-from-nbd /dev/nbd0           \
        "$ltspimage_name"
      ;;
    *)
      echo 'I do not know from where to install an ltsp image' >&2
      return 1
      ;;
  esac

  sync
}

install_localbootdevice() {
  puavo_hosttype=$1
  puavo_install_hosttype=$2
  puavo_preseed_setup_filesystems_args=$3

  puavo-setup-filesystems $puavo_preseed_setup_filesystems_args
  setup_state "$puavo_hosttype"

  # Grub needs to be installed before images, because grub
  # configuration is updated during image installation by
  # puavo-image-preinst.
  install_grub
  install_image "$puavo_install_hosttype"

  if [ "$puavo_hosttype" = 'bootserver' ]; then
    /usr/local/lib/puavo-handle-image-changes
  fi

  update_configuration

  do_umounts
}

is_preinstalled() { [ "$1" = 'preinstalled' ]; }

setup_preinstalled_localbootdevice() {
  puavo_hosttype=$1

  update_configuration_retstatus=0

  if ! [ "$puavo_hosttype" = 'bootserver' \
           -o "$puavo_hosttype" = 'laptop' \
           -o "$puavo_hosttype" = 'wirelessaccesspoint' ]; then
    echo "Setting up preinstalled '$puavo_hosttype' is not supported" >&2
    return 1
  fi

  setup_state "$puavo_hosttype"

  # some failures of update_configuration are inconsequential and can be
  # fixed after reboot
  update_configuration || update_configuration_retstatus=1

  # If host was preinstalled, grub will boot the host as 'preinstalled' until
  # we do this:
  puavo-install-grub --hosttype "$puavo_hosttype" --only-update-config \
    || update_configuration_retstatus=1

  # From now on the host will boot as a fully installed host.
  rm -f /images/puavo_preinstalled || update_configuration_retstatus=1

  return $update_configuration_retstatus
}

setup_state() {
  local puavo_hosttype
  puavo_hosttype=$1

  mkdir -p /state
  mountpoint -q /state || mount /dev/mapper/puavo-state /state
  mkdir -p /state/etc
  cp -aT /etc/puavo /state/etc/puavo
  sync

  if [ "$puavo_hosttype" = 'bootserver' ]; then
    if ! puavo-set-root-password; then
      echo 'Could not setup root password for bootservers' >&2
      return 1
    fi

    # this affects setup_krb5kdc and puavo-init-ds-slave
    export PUAVO_BOOTSERVER_INSTALLATION=true

    /etc/puavo-conf/scripts/setup_hostname
    /etc/puavo-conf/scripts/setup_state_partition
    /etc/puavo-conf/scripts/setup_slapd
    /etc/puavo-conf/scripts/setup_krb5kdc
    puavo-init-ds-slave
  fi

  return 0
}

update_configuration() {
  update_configuration_status=0

  echo 'Updating configuration...'
  if /usr/lib/puavo-ltsp-install/update-configuration; then
    echo '  ... configuration updated.'
    echo 'Trying image update...'
    if /usr/lib/puavo-ltsp-install/update-images false false; then
      echo '  ... image updated.'
    else
      echo '  ... image update failed (may update it later).'
      update_configuration_status=1
    fi
  else
    echo '  ... a problem occurred when updating configuration.'
    update_configuration_status=1
  fi

  echo

  sync

  return $update_configuration_status
}


# main

puavo_install_hosttype=$(get_install_hosttype)

preinstall_only=false

# these might be filled later by ask_preseed subroutine
puavo_preseed_register_args=
puavo_preseed_setup_filesystems_args=

install_mode=${1:-normal}

case "$install_mode" in
  normal)
    ;;
  preinstall)
    ask_preseed
    do_preinstall "$puavo_install_hosttype" \
                  "$puavo_preseed_setup_filesystems_args"
    exit 0
    ;;
  preseed-install)
    ask_preseed
    ;;
  *)
    echo "Unknown installation mode: '${install_mode}'" >&2
    exit 1
    ;;
esac

accepted_hosttypes=$(get_accepted_hosttypes "$puavo_install_hosttype")

puavo-register --accepted-devicetypes "$accepted_hosttypes" \
               ${puavo_preseed_register_args}

puavo_hosttype=$(cat /etc/puavo/hosttype)
puavo-conf puavo.hosttype "$puavo_hosttype"

if is_preinstalled "$puavo_install_hosttype"; then
  setup_preinstalled_localbootdevice "$puavo_hosttype"
  exit 0
fi

# Host is not preinstalled, so do the full install if hosttype so
# requires (for fatclients nothing needs to be done).

case "$puavo_hosttype" in
  bootserver|laptop|wirelessaccesspoint)
    install_localbootdevice "$puavo_hosttype"                       \
                            "$puavo_install_hosttype"               \
                            "$puavo_preseed_setup_filesystems_args"
    ;;
esac
