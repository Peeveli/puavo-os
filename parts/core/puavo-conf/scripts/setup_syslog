#!/bin/sh

set -eu

do_not_remove_list=''
hostname=$(hostname)

receive_as_bootserver() {
  do_not_remove_list='
    /etc/logrotate.d/hosts
    /etc/rsyslog.d/receive_messages_to_var_log_hosts.conf
  '

  install -o root -g adm -m 750 -d /var/log/hosts

  cat <<'EOF' > /etc/logrotate.d/hosts.tmp
/var/log/hosts/*.log {
	compress
	copytruncate
	missingok
	nocreate
	notifempty
	rotate 8
	size 10M
}
EOF
  mv /etc/logrotate.d/hosts.tmp /etc/logrotate.d/hosts

  cat <<EOF > /etc/rsyslog.d/receive_messages_to_var_log_hosts.conf.tmp
# provides TCP syslog reception
module(load="imtcp")
input(type="imtcp" port="514")

module(load="imrelp")
input(type="imrelp" port="20514")

\$template HostFile,"/var/log/hosts/%HOSTNAME%.log"

if (\$hostname != '${hostname}') then ?HostFile
EOF
  mv /etc/rsyslog.d/receive_messages_to_var_log_hosts.conf.tmp \
     /etc/rsyslog.d/receive_messages_to_var_log_hosts.conf
}

send_everything_to_bootserver() {
  do_not_remove_list='/etc/rsyslog.d/send_everything_to_bootserver.conf'

  cat <<'EOF' > /etc/rsyslog.d/send_everything_to_bootserver.conf
$ModLoad omrelp

*.* :omrelp:syslog:20514;RSYSLOG_ForwardFormat
EOF
}

send_session_data_to_bootserver_with_cache() {
  do_not_remove_list='/etc/rsyslog.d/send_session_data_to_bootserver_with_cache.conf'

  cat <<'EOF' > /etc/rsyslog.d/send_some_to_bootserver_with_cache.conf
module(load="omprog")

$template PuavoForwardFormat,"<%PRI%>%TIMESTAMP% %HOSTNAME% %syslogtag:1:32%%msg:::sp-if-no-1st-sp%%msg%\n"

ruleset(name="cachedsessionlogging") {
    action(type="omprog"
           binary="/usr/local/lib/puavo-caching-syslog-sender"
           template="PuavoForwardFormat")
}

if (
     ($programname == 'puavo-login'
        and (   $msg contains "opening login session"
             or $msg contains "closing login session"))
  or ($programname == 'sshd'
        and (   $msg contains "session opened"
             or $msg contains "session closed"))
  or ($programname == 'systemd'
        and (   $msg startswith " Started Session"
             or $msg startswith " Stopped Session"))
  or $programname == 'systemd-logind'
) then call cachedsessionlogging
EOF
}

#
# First make configuration that is common to all scenarios.
#

cat <<EOF > /etc/rsyslog.conf.tmp
#  /etc/rsyslog.conf	Configuration file for rsyslog.
#
#			For more information see
#			/usr/share/doc/rsyslog-doc/html/rsyslog_conf.html


#################
#### MODULES ####
#################

module(load="imuxsock") # provides support for local system logging
module(load="imklog")   # provides kernel logging support
#module(load="immark")  # provides --MARK-- message capability

# provides UDP syslog reception
#module(load="imudp")
#input(type="imudp" port="514")

# provides TCP syslog reception
#module(load="imtcp")
#input(type="imtcp" port="514")

module(load="builtin:omfile"
       fileCreateMode="0640"
       fileOwner="root"
       fileGroup="adm")

###########################
#### GLOBAL DIRECTIVES ####
###########################

#
# Use traditional timestamp format.
# To enable high precision timestamps, comment out the following line.
#
\$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

#
# Set the default permissions for all log files.
#
\$FileOwner root
\$FileGroup adm
\$FileCreateMode 0640
\$DirCreateMode 0755
\$Umask 0022

#
# Where to place spool and state files
#
\$WorkDirectory /var/spool/rsyslog

# Slow things down a bit so that we do not spam bootserver syslog
# and do not fill up our local /var.
\$MainMsgQueueDequeueSlowdown 100000

#
# Include all config files in /etc/rsyslog.d/
#
\$IncludeConfig /etc/rsyslog.d/*.conf


###############
#### RULES ####
###############

#
# filter some messages that we do not care about
#

# see https://forge.univention.org/bugzilla/show_bug.cgi?id=47639
:msg, contains, "slap_global_control: unrecognized control: 1.3.6.1.4.1.4203.666.5.16" stop

# XXX Do not log message about missing ldap attribute indexed.
# XXX We should perhaps look into this if we want to do add those indices...
:msg, regex, "<= bdb_equality_candidates: \(.*\) not indexed" stop

if (\$hostname == '${hostname}') then {
  # Put martians to their own logfile.  Duck Dodgers in the 24Â½th Century!
  if (\$programname == 'kernel' and
       (\$msg contains "IPv4: martian source"
          or \$msg contains "ll header:")) then {
    action(type="omfile" file="/var/log/martians")
    stop
  }

  if \$programname == 'fluentd' then {
    action(type="omfile" file="/var/log/fluentd/fluentd-daemon.log")
    stop
  }

  if \$programname == 'puavo-rest' then {
    action(type="omfile" file="/var/log/puavo/puavo-rest")
    stop
  }

  if \$programname == 'puavo-tftpd' then {
    action(type="omfile" file="/var/log/puavo/puavo-tftpd")
    stop
  }

  #
  # Some standard log files.  Log by facility.
  #
  auth,authpriv.*		/var/log/auth.log
  *.*;auth,authpriv.none	-/var/log/syslog
  #cron.*			/var/log/cron.log
  daemon.*			-/var/log/daemon.log
  kern.*			-/var/log/kern.log
  lpr.*				-/var/log/lpr.log
  mail.*			-/var/log/mail.log
  user.*			-/var/log/user.log

  #
  # Logging for the mail system.  Split it up so that
  # it is easy to write scripts to parse these files.
  #
  mail.info			-/var/log/mail.info
  mail.warn			-/var/log/mail.warn
  mail.err			/var/log/mail.err

  #
  # Some "catch-all" log files.
  #
  *.=debug;\\
          auth,authpriv.none;\\
          news.none;mail.none	-/var/log/debug
  *.=info;*.=notice;*.=warn;\\
          auth,authpriv.none;\\
          cron,daemon.none;\\
          mail,news.none	-/var/log/messages

  #
  # Emergencies are sent to everybody logged in.
  #
  *.emerg			:omusrmsg:*
}
EOF
mv /etc/rsyslog.conf.tmp /etc/rsyslog.conf

#
# Then continue with policy-specific configurations.
#

logging_policy="$(puavo-conf puavo.admin.logging.policy)"

case "$logging_policy" in
  local-only)
    ;;
  receive-as-bootserver)
    receive_as_bootserver
    ;;
  send-everything-to-bootserver)
    send_everything_to_bootserver
    ;;
  send-session-data-to-bootserver-with-cache)
    send_session_data_to_bootserver_with_cache
    ;;
  *)
    echo "Unsupported logging policy: ${logging_policy}" >&2
    exit 1
    ;;
esac

all_configuration_files='
  /etc/logrotate.d/hosts
  /etc/rsyslog.d/receive_messages_to_var_log_hosts.conf
  /etc/rsyslog.d/send_everything_to_bootserver.conf
  /etc/rsyslog.d/send_session_data_to_bootserver_with_cache.conf
'

for conffile in $all_configuration_files; do
  found=false
  for do_not_remove in $do_not_remove_list; do
    [ "$do_not_remove" = "$conffile" ] && found=true
  done
  $found || rm -f "$conffile"
done

exit 0
