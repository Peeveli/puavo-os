#!/bin/sh

# Setup /etc/resolv.conf for netboot devices,
# and then setup /etc/puavo from DNS.
#
# The following settings are queried and set under /etc/puavo:
#
# /etc/puavo/domain
# /etc/puavo/hostname
# /etc/puavo/kerberos/master
# /etc/puavo/kerberos/realm
# /etc/puavo/kerberos/slave
# /etc/puavo/kerberos/toprealm - MISSING
# /etc/puavo/ldap/base
# /etc/puavo/ldap/master
# /etc/puavo/ldap/slave
# /etc/puavo/topdomain         - MISSING

set -eu

# Setup /etc/resolv.conf and /etc/puavo only if we have booted with NBD.
test -e /run/puavo/nbd-server || exit 0

query_dns() {
  if ! query_dns_answer=$(host -R 3 -W 5 "$@") \
    || [ -z "$query_dns_answer" ]; then
      echo "Error in setup_etc_puavo_from_dns with DNS lookup $@" >&2
      return 1
  fi

  echo "$query_dns_answer"
}

query_srv() {
  awk_args=''
  if [ "$1" = "--withport" ]; then
    awk_args="-v withport=1"
    shift
  fi

  query_dns -t SRV "$@" \
    | awk $awk_args '
        BEGIN { status = 1 }
        $2 == "has" && $3 == "SRV" && $4 == "record" {
          sub(/\.$/, "", $8)
          if (withport) {
            printf "%s:%s\n", $8, $7
          } else {
            printf "%s\n", $8
          }
          status = 0
        }
        END { exit(status) }
      '
}

query_txt() {
  query_dns -t TXT "$@" \
    | awk '
        BEGIN { status = 1 }
        $2 == "descriptive" && $3 == "text" {
          sub(/^"/, "", $4)
          sub(/"$/, "", $4)
          print $4
          status = 0
        }
        END { exit(status) }
      '
  query_txt_answer=$(query_dns -t TXT "$@")
}

nbd_server=$(cat /run/puavo/nbd-server)

puavo_domain=$(query_txt _puavo $nbd_server)

rm -f /etc/resolv.conf          # remove in case this is a symbolic link
cat <<EOF > /etc/resolv.conf
# Generated by /etc/puavo-conf/scripts/setup_resolv_conf_and_etc_puavo
search ltsp.${puavo_domain}
nameserver ${nbd_server}
EOF

case "$(puavo-conf puavo.hosttype)" in
  diskinstaller|preinstalled|unregistered)
    # Do not setup /etc/puavo when installing,
    # because puavo-register refuses to do anything if this directory exists.
    exit 0
    ;;
esac

ldap_base=$(query_txt "_ldap_base.${puavo_domain}")
ldap_slave=$(query_srv --withport "_ldap._tcp.${puavo_domain}")
ldap_master=$(query_srv --withport "_ldap_master._tcp.${puavo_domain}")

kerberos_realm=$(query_txt "_kerberos.${puavo_domain}")
kerberos_master=$(query_srv "_kerberos-master._tcp.${kerberos_realm}")
kerberos_slave=$(query_srv "_kerberos._tcp.${kerberos_realm}")

hostname_short="$(hostname -s)"

mkdir -p /etc/puavo /etc/puavo/kerberos /etc/puavo/ldap

echo "$puavo_domain"    > /etc/puavo/domain
echo "$hostname_short"  > /etc/puavo/hostname
echo "$kerberos_master" > /etc/puavo/kerberos/master
echo "$kerberos_realm"  > /etc/puavo/kerberos/realm
echo "$kerberos_slave"  > /etc/puavo/kerberos/slave
echo "$ldap_base"       > /etc/puavo/ldap/base
echo "$ldap_master"     > /etc/puavo/ldap/master
echo "$ldap_slave"      > /etc/puavo/ldap/slave

exit 0
