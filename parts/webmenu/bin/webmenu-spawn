#!/bin/sh

# detect development mode
if [ -f package.json ]; then
    export PATH="$(pwd)/bin:$PATH"
fi

. webmenu-env

# set webmenu window type to be menu
# (actually running this once for each webmenu startup should be enough)
webmenu_xwin_id=$(xdotool search --name Webmenu)
if [ -n "$webmenu_xwin_id" ]; then
  xprop -id "$webmenu_xwin_id" -f _NET_WM_WINDOW_TYPE 32a \
    -set _NET_WM_WINDOW_TYPE _NET_WM_WINDOW_TYPE_MENU
fi

default_spawn_sock=~/.config/webmenu/spawn.sock

args="$@"
status=0

# Check if the --pos=X,Y argument was specified on the command line.
# If this script was called from the Webmenu shell extension, then
# it will be there. Otherwise we'll have extra work to do.
pos_specified=0

for arg in "$@"; do
    case "$arg" in
        --pos=*)
            pos_specified=1
            ;;
    esac
done

if [ $pos_specified -eq 0 ]; then
    # No position specified. Assume the script was called from the command
    # line, or by pressing Alt+F1. Determine the mouse position and add it
    # to the arguments, so the menu is centered around the mouse cursor.
    eval $(xdotool getmouselocation --shell)
    args="--pos=$X,$Y --center $args"
fi

spawn(){
    echo "$args" | nc -U $1
    status=$?
}

spawn $WM_SOCK

# Retry with default pipe path. Used when starting webmenu with "nw ."
if [ "$status" != "0"  ]; then
    spawn $default_spawn_sock
fi

if [ "$status" != "0"  ]; then
    echo "fail"
    notify-send --urgency=critical "Failed to spawn Webmenu" "Not running?"
fi
