#!/usr/bin/ruby

require 'json'
require 'puavo/conf'
require 'syslog'

Syslog.open('puavo-local-config/pam/login-setup', Syslog::LOG_CONS)

puavoconf = Puavo::Conf.new

begin
  if puavoconf.get('puavo.admin.personally_administered') != 'true' then
    Syslog.info('not a personally administered host, doing nothing')
    exit(0)
  end

  if puavoconf.get('puavo.admin.primary_user') == '' then
    # This test should be run before populate-users in puavo-ltsp-client,
    # otherwise this just will not work.
    if test(?s, '/var/lib/extrausers/passwd') \
	 || test(?s, '/var/lib/extrausers/group') then
      # /var/lib/extrausers/{passwd,group} exist and have non-zero size,
      # so we deduce that this is not the first login on this host and we do
      # nothing.  (We could add the user as primary_user, but I think it is
      # better to prevent accidents by having this check).
      Syslog.warning('primary user is not set, but this is not the first' \
                       + ' login on this host')
      exit(0)
    end

    raise 'PAM_USER environment variable not set' \
      unless ENV['PAM_USER'] && !ENV['PAM_USER'].empty?

    Syslog.notice('making %s the primary user by using the override mechanism',
                  ENV['PAM_USER'])

    primary_user_override_path = '/state/etc/puavo/primary_user_override'
    File.open(primary_user_override_path, 'w') do |f|
      f.puts(ENV['PAM_USER'])
      Syslog.info('wrote %s', primary_user_override_path)
    end

    puavoconf.overwrite('puavo.admin.primary_user', ENV['PAM_USER'])
  end

  Syslog.info('running puavo-local-config --admins --networkmanager-policy')

  # This adds the primary user into the puavoadmins-group... it must not be
  # done unless primary_user is reliably set in puavo-conf, because adding a
  # login to puavoadmins-group has the side effect of starting up
  # puavo-local-config-ui in desktop login, which has a side effect creating
  # /state/etc/puavo/local/config.json, which has a side effect of restricting
  # logins to primary user and those listed in that file.  If primary_user is
  # not set in puavo-conf, no one can log in.
  system('/usr/sbin/puavo-local-config',
         '--admins',
         '--networkmanager-policy') \
    or raise "Problem running /usr/sbin/puavo-local-config: #{ $?.exitstatus }"
rescue StandardError => e
  Syslog.err('%s', e.message)
  raise e
end

exit(0)
