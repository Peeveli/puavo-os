Description: Fix inotify syscall conditional
 the code checks if the syscall number for inotify_init is defined, if it isn't
 then it assumes it needs to include sys/inotify-syscalls.h (a header which as
 far as I can tell has not existed for years) to get the inotify stuff.

 However the inotify_init syscall is deprecated and doesn't exist at all on
 arm64 (and probablly won't exist on other architectures that are regarded as
 completely new either).  

 The c library function inotify_init appears to now be implemented using the
 inotify_init1 syscall

 This patch updates the conditional logic to also check for the inotify_init1
 syscall number and hence allows it to build on arm64 (and presumablly other
 new architectures).
Author: Peter Michael Green <plugwash@debian.org>
Bug-Debian: https://bugs.debian.org/767758
Forwarded: http://bts.aiken.cz/view.php?id=748
Last-Update: 2014-11-03
--- a/inotify-cxx.h
+++ b/inotify-cxx.h
@@ -36,7 +36,7 @@
 #include <sys/inotify.h>
 
 // Use this if syscalls not defined
-#ifndef __NR_inotify_init
+#if not defined(__NR_inotify_init) && not defined(__NR_inotify_init1)
 #include <sys/inotify-syscalls.h>
 #endif // __NR_inotify_init
 
