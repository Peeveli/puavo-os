#!/bin/sh

set -eu

[ "${GUEST_SESSION:-}" = 'true' ] && exit 0

password_expiration_policy=$(puavo-conf puavo.admin.passwords.expiration.policy)
case "$password_expiration_policy" in
  none)
    exit 0
    ;;
  remind-user)
    ;;
  *)
    echo "Unsupported password expiration policy:" \
         $password_expiration_policy >&2
    exit 1
    ;;
esac

check_for_positive_number() {
  echo "$1" | awk '$1 !~ /^[0-9]+$/ || $1 <= 0 { exit(1) }'
}

password_expiration_days=$(puavo-conf puavo.admin.passwords.expiration.days)
if ! check_for_positive_number "$password_expiration_days"; then
  echo 'puavo.admin.passwords.expiration.time is not okay' >&2
  exit 1
fi

if [ -z "${PUAVO_SESSION_PATH:-}" ]; then
  echo 'PUAVO_SESSION_PATH environment variable not set' >&2
  exit 1
fi

password_last_set=$(jq .user.password_last_set "$PUAVO_SESSION_PATH")
if ! check_for_positive_number "$password_last_set"; then
  echo 'User password last set time does not make sense' >&2
  exit 1
fi

current_time=$(date +%s)

time_to_remind=$(($password_last_set + $password_expiration_days * 24 * 3600))
if [ "$current_time" -lt "$time_to_remind" ]; then
  # password not expired
  exit 0
fi

puavo_session_created_time=$(jq .created "$PUAVO_SESSION_PATH")
if [ -z "$puavo_session_created_time" \
     -o "$current_time" -gt "$(($puavo_session_created_time + 120))" ]; then
  # Do not show reminder to change password if we have operated on stale
  # information (fresh puavo-session data has not been fetched recently).
  exit 0
fi

# remind user to change password

read puavo_domain < /etc/puavo/domain
password_change_url="https://${puavo_domain}/users/password/own?changing=${USER}&password_expired=true"
chromium "--app=$password_change_url" &
