#!/bin/sh

set -eu

puavo_usb_factory_dir=~/.puavo/usb-factory

abitti_images_dir="${puavo_usb_factory_dir}/Abitti"
incoming_dir="${abitti_images_dir}/incoming"

download_status_path="${abitti_images_dir}/DOWNLOAD_STATUS"
latest_abitti_filename_path="${abitti_images_dir}/LATEST_IMAGE"
latest_abitti_version_path="${abitti_images_dir}/VERSION"

cleanup() {
  if grep 'in progress' "$download_status_path" 2>/dev/null; then
    echo failed > "$download_status_path"
  fi
}

trap cleanup 0 INT TERM

logmsg() {
  logger -s -t puavo-download-abitti-usb-stick-images "$@" || true
}

set_latest_image() {
  echo "abitti-v${1}.usbimg" > "${latest_abitti_filename_path}.tmp" || return 1
  echo "$1" > "${latest_abitti_version_path}.tmp" || return 1
  mv "${latest_abitti_filename_path}.tmp" "$latest_abitti_filename_path" \
    || return 1
  mv "${latest_abitti_version_path}.tmp" "$latest_abitti_version_path" \
    || return 1
}

download_abitti() {
  abitti_version=$(puavo-conf puavo.abitti.version)

  if [ "$abitti_version" = 'latest' ]; then
    abitti_version=$(
      wget -q -O - http://static.abitti.fi/usbimg/prod/latest.txt 2>/dev/null) \
        || true
  else
    abitti_version=${abitti_version#abitti-v}
  fi

  if [ -z "$abitti_version" ]; then
    logmsg -p user.err 'could not lookup determine abitti version to use'
    return 1
  fi

  latest_image_name=$(cat "$latest_abitti_filename_path" 2>/dev/null) || true
  if [ -n "$latest_image_name" ]; then
    find "$abitti_images_dir" -name '*.usbimg' \
      -and ! '(' -name "abitti-v${abitti_version}.usbimg" \
                 -or -name "$latest_image_name" ')' \
      -and -atime +60 \
      -exec rm -f '{}' \;
  else
    find "$abitti_images_dir" -name '*.usbimg' \
      -and ! -name "abitti-v${abitti_version}.usbimg" \
      -and -atime +60 \
      -exec rm -f '{}' \;
  fi

  abitti_image_path="${abitti_images_dir}/abitti-v${abitti_version}.usbimg"

  if [ -e "$abitti_image_path" ]; then
    set_latest_image "$abitti_version" || return 1
    return 0
  fi

  koe_zip_path="${incoming_dir}/koe-etcher-${abitti_version}.zip"

  if [ ! -e "$koe_zip_path" ]; then
    if ! wget -O "${koe_zip_path}.tmp" \
              "http://static.abitti.fi/usbimg/prod/${abitti_version}/koe.zip"; then
      logmsg -p user.err "downloading ${koe_zip_path} failed"
      return 1
    fi
    if ! md5sum=$(wget -q -O - http://static.abitti.fi/usbimg/prod/${abitti_version}/koe.zip.md5); then
      logmsg -p user.err "could not get checksum for ${abitti_version}"
      return 1
    fi

    (
      cd "$incoming_dir"
      if ! echo "$md5sum" | awk -v koe_zip_path="${koe_zip_path}.tmp" \
          '{ $2 = koe_zip_path; print }' | md5sum --check --status; then
        logmsg -p user.err "md5sum checksum check failed for $abitti_version"
        return 1
      else
        logmsg -p user.info "md5sum checksum check OK $abitti_version"
      fi
    ) || return 1

    mv "${koe_zip_path}.tmp" "$koe_zip_path" || return 1
  fi

  rm -rf "${incoming_dir}/koe-etcher" || return 1

  if ! unzip -d "${incoming_dir}/koe-etcher" "$koe_zip_path"; then
    logmsg -p user.err "unpacking $koe_zip_path failed"
    return 1
  fi

  mv "${incoming_dir}/koe-etcher/koe.dd" "$abitti_image_path" \
    || return 1

  set_latest_image "$abitti_version" || return 1

  rm -rf "$incoming_dir"
}

mkdir -p "$abitti_images_dir" "$incoming_dir"

# add UI.json for puavo-usb-factory
cat <<'EOF' > "${abitti_images_dir}/UI.json.tmp"
{
  "title": "Tikkutehdas",
  "description": "HUOM!  Abittitikun tekeminen aloitetaan automaattisesti, kun usb-tikku liitetään koneeseen.  Kaikki siinä oleva vanha sisältö poistetaan!",
  "instructions": "- Aseta usb-tikku usb-jakajaan\n- Odota Abitti-tikun valmistumista\n- Irrota valmis tikku",
  "version label": "Abittiversio:",
  "hostname label": "Koneen nimi:",
  "download status label": "Päivitystilanne:",
  "waiting usb hubs": "Odotellaan USB-hubeja...",
  "download state": {
    "up-to-date": "Abitti on ajantasainen.",
    "in progress": "Tikkutehdas hakee uusinta Abittia.",
    "failed": "Uusimman Abitin haku epäonnistui",
    "missing": "Abitti puuttuu.",
    "undefined": "Lataustila on epämääräinen."
  },
  "messages": {
    "error": "virhe",
    "finished": "valmis",
    "nospaceondevice": "liian pieni tikku",
    "starting": "aloitetaan"
  }
}
EOF
mv "${abitti_images_dir}/UI.json.tmp" "${abitti_images_dir}/UI.json"

(
  if ! flock -n 9; then
    logmsg -p user.err 'could not get a lock, exiting...'
    return 1
  fi

  exitstatus=0

  echo in progress > "$download_status_path"
  if ! download_abitti; then
    echo failed > "$download_status_path"
    exitstatus=1
  else
    echo up-to-date > "$download_status_path"
  fi

  if [ "$exitstatus" -ne 0 ]; then
    logmsg -p user.err 'error downloading latest version of Abitti'
    exit $exitstatus
  fi

) 9< "$abitti_images_dir"
