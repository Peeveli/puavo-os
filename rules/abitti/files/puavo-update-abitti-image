#!/bin/sh

set -eu

logmsg() {
  logger -s -t puavo-update-abitti-image "$@" || true
}

# be_very nice
ionice -c 3  -p $$
renice -n 20 -p $$ > /dev/null

abitti_images_dir=/images/abitti
abitti_updates_dir="${abitti_images_dir}/.puavo"
image_server='images.opinsys.fi'

abitti_mode=$(puavo-conf puavo.abitti.mode)
case "$abitti_mode" in
  do-nothing)
    exit 0
    ;;
  install-and-update)
    # just continue...
    ;;
  purge)
    rm -rf "$abitti_images_dir" "$abitti_updates_dir"
    exit 0
    ;;
  *)
    logmsg -p user.err "unsupported abitti mode: '${abitti_mode}'"
    exit 1
    ;;
esac

abitti_version=$(puavo-conf puavo.abitti.version)
if [ -z "$abitti_version" ]; then
  logmsg -p user.err 'puavo.abitti.version is not set, doing nothing!'
  exit 1
fi

mkdir -p "$abitti_images_dir" "$abitti_updates_dir"

abitti_json_path="${abitti_updates_dir}/abitti.json"
wget -q --ca-certificate=/etc/puavo/certs/rootca.pem \
     -O "${abitti_json_path}.tmp" \
     "https://${image_server}/abitti-images/abitti.json"
mv "${abitti_json_path}.tmp" "$abitti_json_path"

if [ "$abitti_version" = 'latest' ]; then
  abitti_version=$(jq -r .latest "$abitti_json_path")

  if [ -z "$abitti_version" ]; then
    logmsg -p user.err \
           'could not determine the latest version from abitti metadata'
    exit 1
  fi
fi

abitti_image="${abitti_version}.squashfs"
abitti_image_fp="${abitti_images_dir}/${abitti_image}"

# remove temporary files (of non-matching versions).
find "$abitti_images_dir" -maxdepth 1 -name '*.squashfs.tmp' \
  -a ! -name "${abitti_version}.squashfs.tmp" \
  -exec rm -f \{} \;

old_abitti_image_fp=''

# remove old squashfs files, except one that we can also use as a base
for squashfs_file in ${abitti_images_dir}/*.squashfs; do
  test -e "$squashfs_file" || continue

  if [ -n "$old_abitti_image_fp" ]; then
    rm -f "$squashfs_file"
    continue
  fi

  old_abitti_image_fp="$squashfs_file"
done

if [ -e "$abitti_image_fp" ]; then
  logmsg -p user.info 'the requested abitti-image is in place'
  exit 0
fi

# XXX check available disk space before downloading
# XXX should not download if system image download is in progress?
# XXX (perhaps we could always just do it before/after the system image
# XXX update, and do abitti update even if it system image update fails?)
# XXX (this way we would do both simultaneously, usually...)

download_rate_limit=$(puavo-conf puavo.image.download.ratelimit)
if ! printf "%s\n" "$download_rate_limit" | grep -Eqx '[0-9]+[km]'; then
  logmsg -p user.err \
         "the rate limit was not understood, got '$download_rate_limit'"
  exit 1
fi

rsync --fuzzy --inplace --progress -v --bwlimit="$download_rate_limit" \
      "${image_server}::images/abitti-images/${abitti_image}" \
      "${abitti_image_fp}.tmp"

# XXX should do checksum check here

if [ -n "$old_abitti_image_fp" ]; then
  # Destroy the old image in the process, but always keeping one
  # *.squashfs file in place.
  mv "${abitti_image_fp}.tmp" "$old_abitti_image_fp"

  # If we fail here (in such a way that the following command never runs
  # or fails), we have the new image with the old name (and thus wrong
  # version number), but this should get fixed in a later run.
  mv "$old_abitti_image_fp" "$abitti_image_fp"
else
  mv "${abitti_image_fp}.tmp" "$abitti_image_fp"
fi
