#!/bin/sh

set -eu

version='6.1.14'

mntpoint='/mnt'
tmpdir=$(mktemp -d /tmp/VBoxGuestAdditions_${version}.iso.XXXXXX)

cleanup() {
  rm -rf "$tmpdir"
}

trap cleanup 0 INT TERM

isofile="VBoxGuestAdditions_${version}.iso"
urlbase="https://download.virtualbox.org/virtualbox/${version}"

sha384_checksum='41ef3f16c7520a42ee805fd004af3b3639a1d6f9545774000d05a008175b6eb0f4ba9f49e384045a4f760b76f5577066'

wget -O "${tmpdir}/${isofile}" "${urlbase}/${isofile}"
contents_dir="${tmpdir}/contents"

file_checksum="$(sha384sum "${tmpdir}/${isofile}" | awk '{ print $1 }')"
if [ "$sha384_checksum" != "$file_checksum" ]; then
  echo "bad checksum: should be '$sha384_checksum', not '$file_checksum'" >&2
  exit 1
fi

mkdir -p "$contents_dir"
(cd "$contents_dir" && 7z x "../${isofile}")

chmod 755 "${contents_dir}/VBoxLinuxAdditions.run"

# This fails because we can not load vboxguest module,
# so we let it fail and test some things afterwards.
"${contents_dir}/VBoxLinuxAdditions.run" 2>/dev/null || true

vmlinuz=$(readlink /boot/vmlinuz)
default_kernel_version=${vmlinuz#vmlinuz-}

if [ ! -e "/lib/modules/${default_kernel_version}/misc/vboxguest.ko" ]; then
  echo 'could not find vboxguest.ko for the default kernel' >&2
  exit 1
fi

if [ ! -e /lib/systemd/system/vboxadd.service ]; then
  echo 'Could not find /lib/systemd/system/vboxadd.service' >&2
  exit 1
fi

if [ ! -e /lib/systemd/system/vboxadd-service.service ]; then
  echo 'Could not find /lib/systemd/system/vboxadd-service.service' >&2
  exit 1
fi

exit 0
